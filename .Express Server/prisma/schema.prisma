generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model bookmarks {
  userId       Int
  recipeId     Int
  bookmarkTime DateTime @default(now()) @db.Timestamp(0)
  users        users    @relation(fields: [userId], references: [userId], onUpdate: Restrict, map: "bookmarks_ibfk_1")
  recipe       recipe   @relation(fields: [recipeId], references: [recipeId], onUpdate: Restrict, map: "bookmarks_ibfk_2")

  @@index([recipeId], map: "recipeId")
  @@index([userId], map: "userId")
  @@id([userId, recipeId])
}

model categories {
  recipeCategory   String @id @db.VarChar(128)
  recipeCategoryId Int    @unique(map: "recipeCategoryId") @default(autoincrement())
}

model newsletter {
  userId        Int
  userEmail     String   @db.VarChar(128)
  subscribeTime DateTime @default(now()) @db.Timestamp(0)

  @@id([userId, userEmail])
}

model recipe {
  recipeId       Int         @id @default(autoincrement())
  recipeTitle    String      @db.VarChar(128)
  recipeCategory String      @db.VarChar(128)
  recipeTime     DateTime    @db.Time(0)
  recipeImg      Bytes
  recipeDetail   String?     @db.LongText
  userId         Int?
  recipeOrder    DateTime?   @default(now()) @db.Timestamp(0)
  recipePath     String?     @db.VarChar(1000)
  bookmarks      bookmarks[]
  users          users?      @relation(fields: [userId], references: [userId], onDelete: Restrict, onUpdate: Restrict, map: "recipe_ibfk_1")

  @@index([userId], map: "userId")
}

model users {
  userId       Int         @id @default(autoincrement())
  userName     String      @db.VarChar(128)
  userEmail    String      @db.VarChar(200)
  userPassword String      @db.VarChar(200)
  userImg      Bytes?
  bookmarks    bookmarks[]
  recipe       recipe[]
}
